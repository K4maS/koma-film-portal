{"version":3,"file":"static/js/943.61776cff.chunk.js","mappings":"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","sources":["webpack://koma-film-portal/./src/components/FilmItem/filmItem.module.css?1982","components/FilmItem/FilmItem.tsx","webpack://koma-film-portal/./src/components/FilmsList/filmsList.module.css?5d6b","webpack://koma-film-portal/./src/components/ul/PaginationBtn/paginationBtn.module.css?dc59","components/ul/PaginationBtn/PaginationBtn.tsx","components/FilmsList/FilmsList.tsx","webpack://koma-film-portal/./src/components/MessageBlock/messageBlock.module.css?2fed","components/MessageBlock/MessageBlock.tsx","util/filmsFilter.ts","util/dividePages.ts","pages/LikedFilms/LikedFilms.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"filmItem_item__rz2TU\",\"link\":\"filmItem_link__MZKoo\",\"block\":\"filmItem_block__2pmLQ\",\"imgBlock\":\"filmItem_imgBlock__Vltyn\",\"poster\":\"filmItem_poster__C6+K4\",\"title\":\"filmItem_title__F1Xhv\",\"logo\":\"filmItem_logo__erZw4\",\"buttons\":\"filmItem_buttons__c6Ibz\"};","import { Link, useNavigate } from 'react-router-dom';\nimport { kpFullFilmType } from '../../types/filmTypes';\nimport { LogoButton } from '../ul/LogoButton/LogoButton';\nimport style from './filmItem.module.css';\nimport { BsHandThumbsUpFill, BsHandThumbsDownFill } from 'react-icons/bs';\nimport { navigPaths } from '../../navigationPaths';\nimport { useAppDispatch, useAppSelector } from '../../hooks/storeHooks';\nimport { addLikedFilm, removeFilmFromLiked } from '../../store/slices/Users';\nimport React, { useEffect, useState } from 'react';\nimport { GetIndexOfUserById } from '../../util/getIndexOfUserById';\n\ninterface FilmItemType\n\textends React.DetailedHTMLProps<\n\t\tReact.HTMLAttributes<HTMLUListElement>,\n\t\tHTMLUListElement\n\t> {\n\tdata: kpFullFilmType;\n}\n\nexport const FilmItem: React.FC<FilmItemType> = ({ data }) => {\n\tconst dispatch = useAppDispatch();\n\tconst [inLikedList, setInLikedList] = useState(false);\n\tconst currentUserId = useAppSelector((state) => state.users.currentUserId);\n\tconst usersList = useAppSelector((state) => state.users.usersList);\n\n\tconst navigate = useNavigate();\n\n\tconst likedFilmsIdList = useAppSelector((state) => {\n\t\tif (currentUserId !== null) {\n\t\t\tconst index = GetIndexOfUserById(usersList, currentUserId);\n\t\t\treturn state.users.usersList[index]?.likedFilmsId;\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\tif (likedFilmsIdList) {\n\t\t\tif (likedFilmsIdList.includes(data.kinopoiskId)) {\n\t\t\t\tsetInLikedList(true);\n\t\t\t} else {\n\t\t\t\tsetInLikedList(false);\n\t\t\t}\n\t\t}\n\t}, [likedFilmsIdList]);\n\n\treturn (\n\t\t<li className={style.item}>\n\t\t\t<Link\n\t\t\t\tclassName={style.link}\n\t\t\t\tto={`${navigPaths.card}/${data.kinopoiskId}`}\n\t\t\t>\n\t\t\t\t<div className={style.imgBlock}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={style.poster}\n\t\t\t\t\t\tsrc={data.posterUrlPreview}\n\t\t\t\t\t\talt={\n\t\t\t\t\t\t\tdata.nameRu\n\t\t\t\t\t\t\t\t? data.nameRu\n\t\t\t\t\t\t\t\t: data.nameEn\n\t\t\t\t\t\t\t\t\t? data.nameEn\n\t\t\t\t\t\t\t\t\t: data.nameOriginal!\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={style.block}>\n\t\t\t\t\t<h2 className={style.title}>\n\t\t\t\t\t\t{data.nameRu\n\t\t\t\t\t\t\t? data.nameRu\n\t\t\t\t\t\t\t: data.nameEn\n\t\t\t\t\t\t\t\t? data.nameEn\n\t\t\t\t\t\t\t\t: data.nameOriginal!}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className={style.year}>\n\t\t\t\t\t\t{data.nameEn ? data.nameEn + ',' : ''} {data.year}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className={style.rated}>\n\t\t\t\t\t\t{data.countries[0]?.country} • {data.genres[0]?.genre}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={style.buttons}>\n\t\t\t\t\t<LogoButton className={style.btn}>Подробнее</LogoButton>\n\t\t\t\t\t{!inLikedList ? (\n\t\t\t\t\t\t<LogoButton\n\t\t\t\t\t\t\tclassName={style.btnLike}\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t\tif (currentUserId !== null) {\n\t\t\t\t\t\t\t\t\tdispatch(addLikedFilm({ film: data }));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnavigate(navigPaths.login);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BsHandThumbsUpFill /> Лайк\n\t\t\t\t\t\t</LogoButton>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<LogoButton\n\t\t\t\t\t\t\tclassName={style.btnLike}\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\tdispatch(removeFilmFromLiked({ id: data.kinopoiskId }));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tactive\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BsHandThumbsDownFill /> Дизлайк\n\t\t\t\t\t\t</LogoButton>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"filmsList_list__-1joh\",\"pagination\":\"filmsList_pagination__YmDOS\"};","// extracted by mini-css-extract-plugin\nexport default {\"paginatinBtn\":\"paginationBtn_paginatinBtn__YZR90\",\"active\":\"paginationBtn_active__qUqRN\"};","import React, { useEffect, useState } from 'react';\nimport SetClasses from '../../../util/setClasses';\nimport style from './paginationBtn.module.css';\n\ninterface PaginationBtnProps\n\textends React.DetailedHTMLProps<\n\t\tReact.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tHTMLButtonElement\n\t> {\n\tindex: number;\n\tactive: boolean;\n}\n\nexport const PaginationBtn: React.FC<PaginationBtnProps> = ({\n\tindex,\n\tactive,\n\tonClick,\n}) => {\n\tconst [activeBtn, setActiveBtn] = useState('');\n\n\tuseEffect(() => {\n\t\tif (active) {\n\t\t\tsetActiveBtn(style.active);\n\t\t} else {\n\t\t\tsetActiveBtn('');\n\t\t}\n\t}, [active]);\n\n\treturn (\n\t\t<button\n\t\t\tonClick={onClick}\n\t\t\tclassName={SetClasses(style.paginatinBtn, activeBtn)}\n\t\t>\n\t\t\t{index}\n\t\t</button>\n\t);\n};\n","import { kpFullFilmType } from '../../types/filmTypes';\nimport { FilmItem } from '../FilmItem/FilmItem';\nimport style from './filmsList.module.css';\nimport { PaginationBtn } from '../ul/PaginationBtn/PaginationBtn';\nimport { useAppDispatch, useAppSelector } from '../../hooks/storeHooks';\n\ninterface FilmsListType\n\textends React.DetailedHTMLProps<\n\t\tReact.HTMLAttributes<HTMLUListElement>,\n\t\tHTMLUListElement\n\t> {\n\tdata: kpFullFilmType[];\n\tpages?: number;\n\tpage?: number;\n\tonChangePage: (index: number) => void;\n}\n\nexport const FilmsList: React.FC<FilmsListType> = ({\n\tdata,\n\tpages,\n\tpage,\n\tonChangePage,\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t<ul className={style.list}>\n\t\t\t\t{data &&\n\t\t\t\t\tdata.map((elem: kpFullFilmType) => {\n\t\t\t\t\t\treturn <FilmItem data={elem} key={elem.kinopoiskId}></FilmItem>;\n\t\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{pages && pages > 1 && (\n\t\t\t\t<ul className={style.pagination}>\n\t\t\t\t\t{pages &&\n\t\t\t\t\t\tArray.from({ length: pages }).map((elem, index) => {\n\t\t\t\t\t\t\tconst listPage = index + 1;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className={style.paginationItem} key={index}>\n\t\t\t\t\t\t\t\t\t<PaginationBtn\n\t\t\t\t\t\t\t\t\t\tonClick={() => onChangePage(index)}\n\t\t\t\t\t\t\t\t\t\tindex={listPage}\n\t\t\t\t\t\t\t\t\t\tactive={listPage === page}\n\t\t\t\t\t\t\t\t\t></PaginationBtn>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"messageBlock_block__fJS03\",\"title\":\"messageBlock_title__+I7PB\"};","import React, { ReactElement } from 'react';\nimport style from './messageBlock.module.css';\nimport SetClasses from '../../util/setClasses';\n\ninterface MessageBlockType\n\textends React.DetailedHTMLProps<\n\t\tReact.HTMLAttributes<HTMLDivElement>,\n\t\tHTMLDivElement\n\t> {\n\ttitle: string;\n\tchildren?: ReactElement;\n}\n\nexport default function MessageBlock({ title, children }: MessageBlockType) {\n\treturn (\n\t\t<div className={SetClasses(style.block, 'container')}>\n\t\t\t<h1 className={style.title}>{title}</h1>\n\t\t\t<div>{children}</div>\n\t\t</div>\n\t);\n}\n","import { kpFullFilmType } from '../types/filmTypes';\nimport { DividePages } from './dividePages';\n\nexport const FilmsFilter = (\n\tdata: kpFullFilmType[],\n\tlikedFilmsIdList: Array<number>,\n): Array<kpFullFilmType[]> | [] => {\n\tlet pageLikedFilms: Array<kpFullFilmType[]> | [] = [];\n\n\tif (data) {\n\t\tconst pagedFilms = data.filter(\n\t\t\t(elem: kpFullFilmType): kpFullFilmType | undefined => {\n\t\t\t\tif (likedFilmsIdList && likedFilmsIdList.includes(elem.kinopoiskId)) {\n\t\t\t\t\treturn elem;\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t\tpageLikedFilms = DividePages(pagedFilms);\n\t}\n\n\treturn pageLikedFilms;\n};\n","import { kpFullFilmType } from '../types/filmTypes';\n\nexport function DividePages(\n\tdata: Array<kpFullFilmType>,\n\tpages = 20,\n): Array<Array<kpFullFilmType>> {\n\tconst dataPages: number = Math.ceil(data.length / Number(pages));\n\tconst pagedData = [];\n\n\tlet startIndex = 0;\n\tlet endIndex = startIndex + Number(pages);\n\n\tfor (let i = 0; i < dataPages; i++) {\n\t\tif (endIndex > Number(data.length)) {\n\t\t\tendIndex = Number(data.length);\n\t\t}\n\t\tpagedData[i] = data.slice(startIndex, endIndex);\n\t\tstartIndex = endIndex;\n\t\tendIndex = startIndex + Number(pages);\n\t}\n\n\treturn pagedData;\n}\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { FilmsList } from '../../components/FilmsList/FilmsList';\nimport PageMessage from '../../components/MessageBlock/MessageBlock';\nimport { useAppSelector } from '../../hooks/storeHooks';\nimport { GetIndexOfUserById } from '../../util/getIndexOfUserById';\nimport { PageContext } from '../../contextAPI/AppContext/AppContextProvider';\nimport { FilmsFilter } from '../../util/filmsFilter';\n\nexport default function LikedFilms() {\n\tconst allLikedFilmsIdList = useAppSelector((state) => state.users.likedFilms);\n\tconst usersList = useAppSelector((state) => state.users.usersList);\n\tconst pageData = useContext(PageContext);\n\n\tconst currentUserId = useAppSelector((state) => state.users.currentUserId);\n\tconst likedFilms = useAppSelector((state) => state.users.usersList);\n\n\tconst [likedFilmsIdList, setLikedFilmsIdList] = useState<number[]>([]);\n\n\tuseEffect(() => {\n\t\tif (currentUserId !== null && likedFilms !== undefined) {\n\t\t\tconst index = GetIndexOfUserById(usersList, currentUserId);\n\t\t\tsetLikedFilmsIdList(likedFilms[index].likedFilmsId);\n\t\t}\n\t}, [likedFilms]);\n\n\tuseEffect(() => {\n\t\tconst listLength = FilmsFilter(\n\t\t\tallLikedFilmsIdList,\n\t\t\tlikedFilmsIdList,\n\t\t).length;\n\n\t\tconst pagesCount = Number(listLength);\n\t\tconst currentPage = Number(pageData?.currentPage);\n\t\tconst setCurrentPage = pageData?.changeCurrentPage;\n\n\t\tconst pageIsCorrect = pagesCount > currentPage;\n\n\t\tconsole.log(pageIsCorrect);\n\n\t\tif (setCurrentPage && !pageIsCorrect) {\n\t\t\tif (pagesCount > 1) {\n\t\t\t\tsetCurrentPage(pagesCount - 1);\n\t\t\t} else {\n\t\t\t\tsetCurrentPage(currentPage);\n\t\t\t}\n\t\t}\n\t\tconsole.log(currentPage, pagesCount);\n\t}, [likedFilmsIdList]);\n\n\tconst FilmsFilterMemo = useCallback(FilmsFilter, [likedFilmsIdList]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t{currentUserId === null ? (\n\t\t\t\t\t<PageMessage title=\"Авторизуйтесь чтобы увидеть ваш список любимых фильмов\" />\n\t\t\t\t) : FilmsFilterMemo(allLikedFilmsIdList, likedFilmsIdList).length <=\n\t\t\t\t  0 ? (\n\t\t\t\t\t<PageMessage title=\"Список пуст\" />\n\t\t\t\t) : FilmsFilterMemo(allLikedFilmsIdList, likedFilmsIdList) &&\n\t\t\t\t  pageData ? (\n\t\t\t\t\t<FilmsList\n\t\t\t\t\t\tpages={\n\t\t\t\t\t\t\tFilmsFilterMemo(allLikedFilmsIdList, likedFilmsIdList).length\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpage={pageData?.currentPage + 1}\n\t\t\t\t\t\tonChangePage={pageData?.changeCurrentPage}\n\t\t\t\t\t\tdata={\n\t\t\t\t\t\t\tFilmsFilterMemo(allLikedFilmsIdList, likedFilmsIdList)[\n\t\t\t\t\t\t\t\tpageData?.currentPage\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t></FilmsList>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"names":["FilmItem","_ref","_data$countries$","_data$genres$","data","dispatch","useAppDispatch","inLikedList","setInLikedList","useState","currentUserId","useAppSelector","state","users","usersList","navigate","useNavigate","likedFilmsIdList","_state$users$usersLis","index","GetIndexOfUserById","likedFilmsId","useEffect","includes","kinopoiskId","_jsx","className","style","item","children","_jsxs","Link","link","to","concat","navigPaths","card","imgBlock","poster","src","posterUrlPreview","alt","nameRu","nameEn","nameOriginal","block","title","year","rated","countries","country","genres","genre","buttons","LogoButton","btn","btnLike","onClick","e","preventDefault","stopPropagation","removeFilmFromLiked","id","active","BsHandThumbsDownFill","addLikedFilm","film","login","BsHandThumbsUpFill","PaginationBtn","activeBtn","setActiveBtn","SetClasses","FilmsList","pages","page","onChangePage","list","map","elem","pagination","Array","from","length","listPage","paginationItem","MessageBlock","FilmsFilter","pageLikedFilms","arguments","undefined","dataPages","Math","ceil","Number","pagedData","startIndex","endIndex","i","slice","DividePages","filter","LikedFilms","allLikedFilmsIdList","likedFilms","pageData","useContext","PageContext","setLikedFilmsIdList","listLength","pagesCount","currentPage","setCurrentPage","changeCurrentPage","pageIsCorrect","console","log","FilmsFilterMemo","useCallback","PageMessage"],"sourceRoot":""}